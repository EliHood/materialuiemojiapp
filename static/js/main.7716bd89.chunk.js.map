{"version":3,"sources":["components/Navbar.js","components/Footer.js","components/Emoji.js","components/emojiList.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","component","varient","color","withStyles","theme","text","paddingTop","spacing","unit","paddingLeft","paddingRight","paper","paddingBottom","list","marginBottom","subHeader","backgroundColor","palette","background","appBar","top","bottom","left","toolbar","alignItems","justifyContent","fabButton","zIndex","right","margin","props","classes","className","container","display","flexWrap","textField","marginLeft","marginRight","width","dense","marginTop","menu","emoji","TextField_default","id","label","value","onChange","emojiToggle","dist_default","onEmojiClick","emojiClick","index_es","cancel","onClick","handleButton","variant","handleShowButton","onSubmit","style","shadows","root","flexGrow","maxWidth","overflow","maxHeight","padding","textAlign","secondary","myitem","emojiButton","myitemList","notFound","Grid_default","item","sm","ListSubheader_default","items","length","map","i","List_default","ListItem_default","key","href","jsemoji","JSEMOJI","img_set","img_sets","emojione","path","supports_css","allow_native","replace_mode","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","preventDefault","setState","target","handleClick","n","replace_colons","concat","name","state","toConsumableArray","console","log","components_Navbar","xs","md","Paper_default","components_Emoji","emojiList","components_Footer","Component","defineProperty","minHeight","breakpoints","up","flex","Boolean","window","location","hostname","match","createMuiTheme","primary","light","main","danger","ReactDOM","render","core_styles","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7716bd89.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst Navbar = () => {\n    return (\n        <div>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography component=\"h2\" varient=\"h2\" color=\"inherit\">\n                        Emoji Material UI Example \n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport { withStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = theme => ({\n    text: {\n      paddingTop: theme.spacing.unit * 2,\n      paddingLeft: theme.spacing.unit * 2,\n      paddingRight: theme.spacing.unit * 2,\n    },\n    paper: {\n      paddingBottom: 50,\n    },\n    list: {\n      marginBottom: theme.spacing.unit * 2,\n    },\n    subHeader: {\n      backgroundColor: theme.palette.background.paper,\n    },\n    appBar: {\n      top: 'auto',\n      bottom: 0,\n      left: 0,\n    },\n    toolbar: {\n      alignItems: 'center',\n      justifyContent: 'space-between',\n    },\n    fabButton: {\n      position: 'absolute',\n      zIndex: 1,\n      top: -30,\n      left: 0,\n      right: 0,\n      margin: '0 auto',\n    },\n  });\n  \n\nconst Footer = props => {\n    const { classes } = props;\n    return(\n\n        <div>\n\n        <AppBar position=\"absolute\" color=\"secondary\" className={classes.appBar}>\n            <Toolbar className={classes.toolbar}>\n                <Typography component=\"h2\" varient=\"h2\" color=\"inherit\">\n                Emoji Material UI Example \n                </Typography>\n            </Toolbar>\n        </AppBar>\n\n        </div>\n    )\n\n\n}\n\nexport default withStyles(styles) (Footer) ;","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport {withStyles} from '@material-ui/core';\nimport EmojiPicker from 'emoji-picker-react';\nimport {Button} from '@material-ui/core';\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width:'100%'\n    },\n    dense: {\n        marginTop: 19\n    },\n    menu: {\n        width: 200\n    },\n    emoji: {\n        margin: '20px 0px'\n    }\n});\nconst Emoji = props => {\n    const {classes} = props\n    return (\n        <div className={classes.emoji}>\n            <form>\n                <TextField\n                    id=\"standard-name\"\n                    label=\"Enter Something\"\n                    className={classes.textField}\n                    value={props.text}\n                    onChange={props.onChange}\n                    margin=\"normal\"/> {props.emojiToggle\n                    ? (\n                        <div>\n                            <EmojiPicker onEmojiClick={props.emojiClick}/>\n                            <Button\n                                className={classes.cancel}\n                                onClick={props.handleButton}\n                                color=\"danger\"\n                                variant=\"outlined\">\n                                Close\n                            </Button>\n                        </div>\n                    )\n                    : (\n                        <div>\n                            <Button onClick={props.handleShowButton} color=\"primary\" variant=\"outlined\">\n                                Show Emojis\n                            </Button>\n                            <Button\n                                onClick={props.onSubmit}\n                                style={{\n                                marginLeft: '10px'\n                            }}\n                                color=\"primary\"\n                                variant=\"outlined\">\n                                Submit\n                            </Button>\n                        </div>\n                    )}\n                {/* End  Form */}\n            </form>\n        </div>\n    )\n}\nexport default withStyles(styles)(Emoji);","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nconst styles = theme => ({\n    shadows: [\"none\"],\n    spacing: 8,\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 100,\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'left',\n        width: '500px',\n        color: theme.palette.text.secondary\n    },\n    textField: {\n        width: '400px'\n    },\n    myitem: {\n        margin: '40px'\n    },\n    emoji: {\n        margin: '40px'\n    },\n    emojiButton: {\n        margin: '20px 0px'\n    },\n    myitemList: {\n        margin: '20px 0px'\n    },\n    notFound: {\n        margin: '20px 0px'\n    },\n    cancel: {\n        margin: '20px 0px'\n    }\n});\nconst EmojiList = (props) => {\n    const {classes} = props\n    return (\n        <Grid item sm={4} className={classes.myitem}>\n            {/* reference it by the name items, it can be called whatever.  */}\n            <ListSubheader> Results </ListSubheader>\n            {props.items.length > 0\n                ? (props.items.map((item, i) => (\n                        <List className={classes.root} component=\"nav\">\n                            <ListItem key={i} href=\"#simple-list\">\n                                {item}\n                            </ListItem>\n                        </List>\n                )))\n                : (\n                    <div>\n                          <List component=\"nav\">\n                            <ListItem  href=\"#simple-list\">\n                                No Items Yet\n                            </ListItem>\n                        </List>\n                    </div>\n                )}\n        </Grid>\n    )\n}\nexport default withStyles(styles)(EmojiList);","import React, {Component} from 'react';\nimport Navbar from './components/Navbar';\nimport {withStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport {Typography} from '@material-ui/core';\nimport Footer from './components/Footer';\nimport Emoji from './components/Emoji';\nimport JSEMOJI from 'emoji-js';\nimport EmojiList from './components/emojiList';\nlet jsemoji = new JSEMOJI();\n// set the style to emojione (default - apple)\njsemoji.img_set = 'emojione';\n// set the storage location for all emojis\njsemoji.img_sets.emojione.path = 'https://cdn.jsdelivr.net/emojione/assets/3.0/png/32/';\n// some more settings...\njsemoji.supports_css = false;\njsemoji.allow_native = true;\njsemoji.replace_mode = 'unified'\nconst styles = theme => ({\n    shadows: [\"none\"],\n    spacing: 8,\n    root: {\n        flexGrow: 1,\n        minHeight: '800px',\n        position: 'relative',\n        [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n            width: 1100,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          },\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        flex:1,\n        textAlign: 'left',\n        color: theme.palette.text.secondary\n    },\n    textField: {\n        width: '400px'\n    },\n    myitem: {\n        margin: '40px'\n    },\n    emoji: {\n        margin: '40px'\n    },\n    emojiButton: {\n        margin: '20px 0px'\n    },\n    myitemList:{\n        margin:'20px 0px'\n    },\n    notFound: {\n        margin:'20px 0px'\n    },\n    cancel: {\n        margin: '20px 0px'\n    }\n});\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            emoji: '',\n            text: '',\n            items: [],\n            emojiToggle: false\n        }\n    }\n    onChange = (e) => {\n        e.preventDefault()\n        this.setState({text: e.target.value});\n    }\n    handleClick = (n, e) => {\n        let emoji = jsemoji.replace_colons(`:${e.name}:`);\n   \n        this.setState({\n            text: this.state.text + emoji,\n        });\n        // console.log(this.state.items)\n    }\n    handleButton = (e) => {\n        e.preventDefault();\n        if(!this.state.emojiToggle){\n          this.setState({emojiToggle: true})\n        }\n        else{\n          this.setState({emojiToggle: false})\n\n        }\n    }\n    \n    onSubmit = (e) => {\n        e.preventDefault();\n        this.setState(\n          {\n            text: this.state.text,\n            items: [...this.state.items, this.state.text]\n          },\n          () => console.log(this.state.items)\n        );\n   \n    }\n    \n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div className={classes.root}>\n                <Navbar/>\n                <Grid container spacing={12}>\n                    <Grid item xs={12} md={6} className={classes.myitem}>\n                        <Paper  className={classes.paper}>\n                            <Typography variant=\"h2\" component=\"h2\">\n                                Insert An Emoji\n                            </Typography>\n                          {/* Begin Form */}\n                         <Emoji \n                            text={this.state.text} \n                            onChange={this.onChange} \n                            emojiToggle={this.state.emojiToggle}\n                            emojiClick={this.handleClick}\n                            handleButton={this.handleButton}\n                            handleShowButton={this.handleButton}\n                            onSubmit={this.onSubmit}\n                             />\n                        </Paper>\n                    </Grid>\n                                \n                {/* items gets passed here as a prop */}\n                <EmojiList items={this.state.items} />\n                </Grid>\n                <Footer/>\n            </div>\n        );\n    }\n}\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport indigo from '@material-ui/core/colors/indigo';\n\nconst theme = createMuiTheme({\n    shadows: [\"none\"],\n    palette: {\n        primary: {\n            light: '#757ce8',\n            main: '#7986cb',\n        },\n        secondary: {\n          main: '#f1f1f1',\n        },\n        danger: {\n          main: '#FF6347',\n        },\n      },\n});\n\nReactDOM.render(\n<MuiThemeProvider theme={theme}>\n    <App />\n</MuiThemeProvider >\n, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}